@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}*{box-sizing:border-box;color:#191919}html{font-family:Roboto,sans-serif;font-size:10px}body{font-size:1.6rem}img{max-width:100%;display:block}h1,h2{color:#231f20}.container{max-width:1366px;margin:0 auto;padding:0 11rem}@media (max-width:900px){.container{padding:0 5.5rem}}@media (max-width:600px){.container{padding:0 3rem}}.container--narrow{max-width:80rem}.noscroll{overflow:hidden}.header__container{display:flex;justify-content:space-between}@media (max-width:600px){.header__container{display:block;text-align:center}}.header__logo{display:block;max-width:3.4rem;margin-top:2.5rem}@media (max-width:600px){.header__logo{margin:2.5em auto 0}}.header__nav{margin-top:3rem;text-transform:uppercase;font-size:1.3rem}@media (max-width:600px){.header__nav{max-width:30rem;margin-left:auto;margin-right:auto}}.header__nav--homepage .menu-item-home{font-weight:700}.header .menu{display:flex}@media (max-width:600px){.header .menu{justify-content:space-between}}.header .active{font-weight:700}.header .menu-item:not(:last-child){margin-right:4rem}.header .menu-item a{color:inherit;text-decoration:none;position:relative}.header .menu-item a:before{content:'';position:absolute;top:100%;left:0;width:100%;height:1px;background-color:#000;-webkit-transform:scale(0);transform:scale(0);transition:.3s}.header .menu-item a:hover:before{-webkit-transform:scale(1);transform:scale(1)}@media (max-width:600px){.header .menu-item{width:6rem}}.projects__filters-area-wrapper{margin-top:1.5rem}@media (max-width:600px){.projects__filters-area-wrapper{margin-top:4rem;position:relative}}.projects__filters{display:flex;justify-content:center;font-size:1.3rem}@media (max-width:600px){.projects__filters{display:block;width:100%;max-width:30rem;background-color:#fff;padding:2rem}}@media (max-width:600px){.projects__filters-wrapper{display:none;width:100%;height:100vh;position:fixed;top:0;left:0;align-items:center;justify-content:center;text-align:center;padding:2rem;background-color:rgba(0,0,0,.1);z-index:10}}.projects__filters-toggler{border:none;background-color:transparent;background-image:url(../images/filter.svg);background-repeat:no-repeat;background-position:left center;background-size:1.4rem;padding-left:2rem;padding-right:0;display:none;margin-left:auto}@media (max-width:600px){.projects__filters-toggler{display:block}}.projects__single-filter:not(:last-child){margin-right:3rem}@media (max-width:600px){.projects__single-filter:not(:last-child){margin-right:0;margin-bottom:2rem}}.projects__single-filter.active{font-weight:700}.projects__button{border:none;background-color:transparent;text-transform:uppercase;font-weight:inherit;padding:0;position:relative}.projects__button:before{content:'';position:absolute;top:100%;left:0;width:100%;height:1px;background-color:#000;-webkit-transform:scale(0);transform:scale(0);transition:.3s}.projects__button:hover:before{-webkit-transform:scale(1);transform:scale(1)}.projects__grid{margin-top:5rem;width:calc(100% + 4rem)}@media (max-width:600px){.projects__grid{width:100%;margin-top:2rem}}.projects__grid-item{width:calc(25% - 4rem);margin-right:4rem;margin-bottom:3rem}@media (max-width:900px){.projects__grid-item{width:calc(50% - 3rem);margin-right:3rem}}@media (max-width:600px){.projects__grid-item{width:100%}}.projects__grid-item img{transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}.projects__grid-item:hover img{-webkit-transform:scale(1.1);transform:scale(1.1)}.projects__link{display:block;text-decoration:none;color:inherit;font-size:1.3rem;overflow:hidden}.projects__title{margin-top:.6rem;text-transform:uppercase;color:inherit;text-decoration:none;display:block;font-size:1.3rem}.page{min-height:calc(100vh - 76px);display:flex;justify-content:center;align-items:center;font-size:2.5rem;font-weight:400;line-height:3rem}@media (max-width:600px){.page{font-size:1.8rem;line-height:2.2rem;padding-top:5rem;min-height:calc(100vh - 150px)}}.page p{margin-bottom:3rem}.page h4{font-size:2.5rem}.page h4 a,.page li a{color:inherit;text-decoration:none;position:relative}.page h4 a:before,.page li a:before{content:'';position:absolute;top:100%;left:0;width:100%;height:1px;background-color:#000;-webkit-transform:scale(0);transform:scale(0);transition:.3s}.page h4 a:hover:before,.page li a:hover:before{-webkit-transform:scale(1);transform:scale(1)}.page ul{display:flex;font-size:1.3rem;margin-top:3rem;flex-wrap:wrap;text-align:center}@media (max-width:600px){.page ul{margin-top:5rem}}.page li{text-transform:uppercase}@media (max-width:600px){.page li{flex:0 0 50%}}.page li:not(:last-child){margin-right:3.5rem}@media (max-width:600px){.page li:not(:last-child){margin-right:0;margin-bottom:2rem}}.single-project{margin-top:3rem;margin-bottom:11.1rem;font-size:1.8rem;line-height:1.2}@media (max-width:600px){.single-project{font-size:1.6rem;margin-bottom:7rem}}.single-project__modal{display:none}@media (max-width:600px){.single-project__modal{display:none;justify-content:center;align-items:center;position:fixed;width:100%;height:100vh;top:0;left:0;background-color:rgba(0,0,0,.7);z-index:101}.single-project__modal img{width:100%;height:auto}}.single-project h1,.single-project h2{font-size:4.3rem;font-weight:700;margin-bottom:3rem}@media (max-width:600px){.single-project h1,.single-project h2{font-size:3.5rem;margin-bottom:2rem}}.single-project h4{font-size:2.5rem;margin-bottom:3rem;line-height:1.2}@media (max-width:600px){.single-project h4{font-size:2rem}}.single-project figure:last-child{margin-bottom:0}.single-project p:not(:last-child){margin-bottom:3rem}@media (max-width:600px){.single-project p:not(:last-child){margin-bottom:2rem}}.single-project .container>:nth-child(2){margin:7rem 0}@media (max-width:900px){.single-project .container>:nth-child(2){display:block;margin:4rem 0}.single-project .container>:nth-child(2) .wp-block-column:last-child{margin-left:0;margin-top:3rem}}.single-project .wp-block-image{margin-bottom:4rem}.single-project .wp-block-image img{max-width:100%;height:auto}.single-project .wp-block-columns{margin-bottom:4rem}@media (max-width:600px){.single-project .wp-block-column:first-child .wp-block-image{margin-bottom:3rem}}.single-project .wp-block-columns .wp-block-columns .wp-block-image{margin-bottom:0}.single-project .mt{margin-top:8.7rem}@media (max-width:600px){.single-project .mt{margin-top:6.5rem}}@media (max-width:600px){.single-project .wp-block-columns.mt:nth-of-type(odd){flex-direction:column-reverse}}@media (max-width:600px){.single-project .mt.wp-block-columns .wp-block-column:first-child .wp-block-image{margin-bottom:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
